"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[3240],{8906:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6672);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},9049:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"education/prompts/PRD/ux-design","title":"UX Design","description":"UX design section for the PRD","source":"@site/docs/education/02-prompts/01-PRD/20-ux-design.mdx","sourceDirName":"education/02-prompts/01-PRD","slug":"/education/prompts/PRD/ux-design","permalink":"/vibe-labs/docs/education/prompts/PRD/ux-design","draft":false,"unlisted":false,"editUrl":"https://github.com/EliFuzz/vibe-labs/docs/education/02-prompts/01-PRD/20-ux-design.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"UX Design","description":"UX design section for the PRD","hide_table_of_contents":true},"sidebar":"education","previous":{"title":"SRE Framework","permalink":"/vibe-labs/docs/education/prompts/PRD/sre-framework"},"next":{"title":"Roadmap and Timeline","permalink":"/vibe-labs/docs/education/prompts/PRD/roadmap-timeline"}}');var s=i(3420),a=i(8906);const o={title:"UX Design",description:"UX design section for the PRD",hide_table_of_contents:!0},r=void 0,c={},l=[];function d(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"## User Experience (UX) Design Section\n\nDefine comprehensive User Experience (UX) requirements and specifications. It ensures the product delivers an intuitive, efficient, and delightful user experience, aligning with user needs, technical capabilities, and brand identity. This section provides the foundational guidelines and principles for creating engaging user interfaces.\n\n### Prerequisites\n\nBefore proceeding with UX design, ensure the following are completed and validated:\n\n- **User Personas and Journeys**: Fully developed and understood.\n- **Functional Requirements**: Clearly defined.\n- **Technical Requirements and Constraints**: Established and assessed for feasibility.\n- **Product Vision and Value Proposition**: Clear and agreed upon.\n- **User Research Insights**: Gathered from usability testing, interviews, etc.\n- **Brand Guidelines and Visual Identity Standards**: Available for reference.\n- **Accessibility Requirements**: Identified for compliance.\n- **Budget and Timeline Considerations**: Understood for design scope.\n\n### 1. UX Design Philosophy & Principles\n\n**Objective**: Establish the overall approach to user experience design and the core principles guiding all UX decisions.\n\n**Required Elements**:\n\n- **Design Philosophy**: The overarching approach to user experience design (e.g., minimalist, emotionally resonant, efficiency-focused).\n- **Core UX Principles**: 3-5 fundamental, actionable principles guiding design decisions.\n  - **Examples**:\n    - **Clarity**: Every element should have a clear purpose and meaning.\n    - **Consistency**: Similar elements should behave in similar ways across the product.\n    - **Efficiency**: Enable users to accomplish tasks with minimal effort.\n    - **Forgiveness**: Design for error prevention and easy recovery from mistakes.\n    - **Accessibility**: Ensure usability for people with diverse abilities.\n    - **Delight**: Create positive and memorable emotional experiences.\n- **User-Centered Design (UCD) Process**: How user needs and research insights systematically drive design decisions, from ideation to validation.\n- **Accessibility Commitment**: Explicit inclusive design principles and adherence to specific accessibility standards (e.g., WCAG compliance level, typically AA or AAA).\n- **Design System Approach**: How consistency in design, components, and patterns will be maintained and scaled across the product.\n- **Brand Alignment**: How the UX supports and reflects the brand identity, values, and visual language.\n\n**Quality Criteria**:\n\n- The design philosophy aligns with the product vision, user needs, and business objectives.\n- Principles are specific, actionable, and provide clear guidance for designers and developers.\n- The UCD approach demonstrates a commitment to user research and validation.\n- Accessibility requirements are comprehensive and integrated from the start.\n- The design system approach supports scalability, maintainability, and consistent user experiences.\n\n### 2. Information Architecture\n\n**Objective**: Define how information is organized, structured, and presented within the product to ensure intuitive navigation and discoverability.\n\n#### 2.1 Site/App Structure\n\n- **Navigation Hierarchy**: Primary, secondary, and tertiary navigation levels and their relationships.\n- **Content Organization**: How content is grouped, categorized, and labeled logically.\n- **User Flow Paths**: Identification of primary paths users take through the product for key tasks.\n- **Search & Discovery**: Mechanisms for users to find information and features (e.g., search functionality, filtering, sorting).\n- **Cross-linking Strategy**: How different sections, content, and features connect.\n- **Wayfinding**: How users understand where they are, where they can go, and how to return.\n\n#### 2.2 Navigation Design\n\n- **Primary Navigation**: Main navigation structure and behavior (e.g., top horizontal bar, sidebar menu).\n- **Secondary Navigation**: Sub-navigation and contextual menus within specific sections.\n- **Breadcrumbs**: Location indicators and navigation aids.\n- **Search Interface**: Design of search functionality, input, and results presentation.\n- **Mobile Navigation**: Mobile-specific navigation patterns (e.g., hamburger menu, tab-based navigation).\n\n### 3. User Interface (UI) Design Guidelines\n\n**Objective**: Define specific UI requirements and standards for visual presentation, layout, and component specifications.\n\n#### 3.1 Layout & Grid System\n\n- **Grid System**: Column structure, gutters, and spacing rules for consistent page layouts.\n- **Layout Patterns**: Common page layouts and templates for different content types.\n- **Responsive Breakpoints**: Specific screen size breakpoints and how the UI adapts at each.\n- **Spacing System**: Consistent scale and usage of spacing (padding, margin) between elements.\n- **Content Hierarchy**: Principles and implementation of visual hierarchy to prioritize information.\n\n#### 3.2 Typography System\n\n- **Font Families**: Primary and secondary typefaces.\n- **Type Scale**: Defined heading sizes, body text sizes, and their relationships.\n- **Line Height & Spacing**: Rules for optimal text readability.\n- **Font Weights**: Available weights and their usage guidelines.\n- **Accessibility**: Contrast ratios and readability standards to ensure compliance (e.g., WCAG AA).\n\n#### 3.3 Color System\n\n- **Primary Colors**: Brand colors and their primary usage guidelines.\n- **Secondary Colors**: Supporting color palette.\n- **Semantic Colors**: Colors used to convey specific meanings (e.g., success, warning, error, info).\n- **Neutral Colors**: Grays and background colors.\n- **Accessibility**: Color contrast guidelines and considerations for colorblindness (WCAG AA compliant).\n\n### 4. Component Design System\n\n**Objective**: Define detailed specifications for all core UI components and their states.\n\n#### 4.1 Core UI Components\n\n- **Definition**: Detailed specifications for each key UI component (e.g., Buttons, Form elements, Navigation elements, Cards, Modals, Tables, Alerts, Loading indicators).\n- **Purpose**: What each component is used for.\n- **Variants**: Different versions or styles of a component.\n- **Usage Guidelines**: When and how to properly use each component.\n- **Visual Examples**: Visual examples and common use cases.\n\n#### 4.2 Component States & Interactions\n\n- **Standard States**: Define appearance and behavior for:\n  - **Default State**: Normal appearance.\n  - **Hover State**: Appearance when hovered over.\n  - **Active State**: Appearance when active/selected.\n  - **Disabled State**: Appearance when non-interactive.\n  - **Loading State**: Appearance during loading/processing.\n  - **Error State**: Appearance when an error occurs.\n  - **Focus State**: Appearance when the component has keyboard focus.\n- **Interaction Design Principles**: Clear visual feedback for all interactions, consistent patterns, support for mouse/keyboard/touch, appropriate loading and error states.\n\n### 5. User Flow & Interaction Design\n\n**Objective**: Define detailed user flows for key scenarios and specify how users interact with the product.\n\n#### 5.1 Key User Flows\n\n- **Flow Name**: Clear name for each user flow.\n- **User Goal**: What the user aims to accomplish within this flow.\n- **Entry Points**: How users initiate the flow.\n- **Flow Steps**: Detailed, step-by-step user actions and corresponding system responses.\n- **Decision Points**: Where users make choices or the system makes decisions.\n- **Error Handling**: What happens when things go wrong, and how users recover.\n- **Success Metrics**: How to measure the successful completion of the flow.\n- **Exit Points**: How users complete or leave the flow.\n- **Critical Flows**: User onboarding, core product workflows, search, content creation, settings, help, error recovery.\n\n#### 5.2 Interaction Patterns\n\n- **Definition**: Specific interaction patterns (e.g., Progressive Disclosure, Inline Editing, Drag and Drop, Infinite Scroll vs. Pagination, Contextual Menus, Multi-step Forms, Real-time Collaboration).\n- **Use Case**: When to apply each pattern.\n- **Behavior**: How the interaction works.\n- **Visual Design**: How it looks and feels.\n- **Accessibility**: How it functions with assistive technologies.\n- **Mobile Considerations**: Touch-specific adaptations.\n\n### 6. Responsive Design Strategy\n\n**Objective**: Define how the UI adapts to different devices and screen sizes, ensuring an optimal experience across all platforms.\n\n#### 6.1 Breakpoint Strategy\n\n- **Defined Breakpoints**: Specify common screen size ranges (e.g., Mobile (320-768px), Tablet (768-1024px), Desktop (1024px+), Large Desktop (1440px+)).\n- **Adaptations per Breakpoint**: Detailed design adaptations for layout, content, and navigation at each breakpoint.\n\n#### 6.2 Mobile-First Design\n\n- **Mobile Priorities**: Identification of the most important features and content for mobile users.\n- **Touch Interactions**: Specific considerations for touch-friendly design (e.g., touch target sizes, thumb-friendly navigation zones).\n- **Performance**: Strategies for mobile performance optimization (e.g., reduced load times, efficient resource usage).\n- **Offline Functionality**: Which features are available without an internet connection.\n- **App-like Features**: Progressive Web App (PWA) considerations.\n\n### 7. Accessibility & Inclusive Design\n\n**Objective**: Define measurable accessibility standards and ensure the design is inclusive for users with diverse abilities.\n\n#### 7.1 Accessibility Standards\n\n- **WCAG Compliance Level**: Target compliance level (e.g., WCAG 2.1 AA or AAA).\n- **Keyboard Navigation**: Full keyboard accessibility requirements for all interactive elements.\n- **Screen Reader Support**: Use of ARIA labels, semantic markup, and clear content structure for screen readers.\n- **Color & Contrast**: Adherence to WCAG guidelines for color contrast ratios.\n- **Motor Accessibility**: Considerations for users with motor impairments.\n- **Cognitive Accessibility**: Guidelines for clear language, simple interactions, and predictable design patterns.\n\n#### 7.2 Inclusive Design Practices\n\n- **Language & Content**: Guidelines for clear, simple, and concise language.\n- **Cultural Considerations**: Internationalization and localization considerations for diverse audiences.\n- **Technology Access**: Support for low-bandwidth environments and older devices.\n- **Diverse Abilities**: Designing for various physical and cognitive abilities.\n- **Testing Strategy**: How to test with diverse users, including those with disabilities.\n\n### 8. Content Strategy & Microcopy\n\n**Objective**: Define guidelines for all textual content within the UI, ensuring consistency, clarity, and effectiveness.\n\n#### 8.1 Content Guidelines\n\n- **Voice & Tone**: Defined brand voice and appropriate tone for different contexts.\n- **Writing Style**: Grammar, punctuation, and overall writing style guidelines.\n- **Content Hierarchy**: How to structure and prioritize content for readability and scannability.\n- **Localization**: Considerations for multi-language content.\n\n#### 8.2 Microcopy & UI Text\n\n- **Standardized Text**: Guidelines for common UI text elements:\n  - **Button Labels**: Clear, action-oriented text.\n  - **Error Messages**: Helpful, specific, and actionable error messages.\n  - **Empty States**: Engaging and informative content for empty states.\n  - **Loading Messages**: Informative messages during loading.\n  - **Help Text**: Contextual help and instructions.\n  - **Success Messages**: Positive confirmation messaging.\n\n### 9. Design Validation & Testing\n\n**Objective**: Define strategies for testing and validating the UX design to ensure it meets requirements and user needs.\n\n#### 9.1 Usability Testing Strategy\n\n- **Testing Methods**: (e.g., Moderated, unmoderated, A/B testing, guerrilla testing).\n- **Test Scenarios**: Key tasks and workflows to be tested.\n- **Success Metrics**: How to measure usability success (e.g., task completion rate, time on task, error rate).\n- **Participant Criteria**: Defining the target users for testing.\n- **Testing Schedule**: When and how often testing will occur throughout the design and development lifecycle.\n\n#### 9.2 Design Quality Assurance\n\n- **Design Reviews**: Formal review processes and criteria for design deliverables.\n- **Accessibility Audits**: Procedures for systematically testing and auditing accessibility compliance.\n- **Cross-Browser Testing**: Strategy for testing UI consistency and functionality across different browsers and devices.\n- **Performance Testing**: How UX performance (e.g., perceived load times, responsiveness) will be measured.\n- **Iteration Process**: How feedback from testing and reviews will be incorporated into design improvements.\n\n### Quality Criteria\n\n- **Usability**: The interface is intuitive, easy to learn, and efficient for users.\n- **Accessibility**: The design is inclusive and fully WCAG compliant (or target level).\n- **Consistency**: Design patterns, components, and interactions are consistently applied across the product.\n- **Efficiency**: Users can complete tasks quickly and easily with minimal cognitive load.\n- **Error Prevention**: The design anticipates and prevents errors, and handles them gracefully when they occur.\n- **Satisfaction**: Users have positive emotional experiences when interacting with the product.\n- **Completeness**: All necessary components, patterns, and guidelines are defined.\n- **Scalability**: The design system can grow and evolve with the product, accommodating new features and changes.\n- **Documentation**: Guidelines are clear, comprehensive, and actionable for both design and development teams.\n- **Maintainability**: The design system and specifications are easy to update and maintain.\n\n### Cross-Reference and Validation\n\n- **Must Reference**: User personas, goals, behaviors, and contexts; functional requirements and feature specifications; technical constraints and capabilities; business objectives and success metrics.\n- **Must Support**: Development planning and estimation; quality assurance and testing strategy; content creation and management; user onboarding and support.\n\n#### Validation Checkpoints (Before Finalizing):\n\n- **User-Centered**: Design addresses identified user needs and behaviors.\n- **Accessible**: Design meets specified accessibility standards and guidelines.\n- **Consistent**: Design patterns are applied consistently throughout the product.\n- **Feasible**: Design is technically and practically implementable within constraints.\n- **Testable**: Design can be validated through user testing against measurable criteria.\n- **Scalable**: The design system and approach can grow and evolve with the product.\n- **Alignment**: UX requirements align with functional requirements, technical specifications, brand guidelines, and business objectives.\n- **Budget & Timeline**: Design complexity fits within the allocated timeline and budget.\n\n### Common Pitfalls to Avoid\n\n- **Design in Isolation**: Not collaborating with development, business, and other stakeholders.\n- **Assumption-Based Design**: Proceeding without user research validation.\n- **Inconsistent Patterns**: Using different patterns for similar interactions, leading to confusion.\n- **Accessibility as an Afterthought**: Adding accessibility features after core design, leading to reworks.\n- **Mobile Neglect**: Designing for desktop first without sufficient mobile consideration.\n- **Complexity Creep**: Adding unnecessary features and complexity without clear user value.\n- **Skipping User Testing**: Not validating designs with real users.\n- **Happy Path Only**: Not considering error scenarios and edge cases in user flows.\n- **Vague Requirements**: Setting unmeasurable usability goals or unrealistic expectations.\n- **Documentation Neglect**: Not properly documenting design decisions and guidelines.\n\n### Edge Case Considerations\n\n- **Diverse Abilities**: Plan comprehensive accessibility features, consider assistive technology compatibility, test with users with disabilities, and provide multiple ways to accomplish tasks.\n- **Technical Constraints**: Work closely with the technical team to understand limitations, identify creative solutions within constraints, and plan UX improvements as technical debt is addressed. Document UX compromises.\n- **Different Expertise Levels**: Design with progressive disclosure for complex features, provide multiple interaction paths, include contextual help, and plan for customizable interfaces.\n- **Complex User Workflows**: Break down complex tasks into smaller steps, provide clear progress indicators, allow users to save progress, and design for both novice and expert users.\n- **Performance Constraints**: Optimize images and media, provide meaningful loading states, design graceful degradation for older browsers, and consider offline functionality.\n- **Internationalization**: Design for text expansion, right-to-left reading patterns, culturally appropriate elements, and different date/time/number formats.\n"})})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);