"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[8968],{2996:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"education/prompts/PRD/overview","title":"Overview","description":"Overview of the PRD","source":"@site/docs/education/02-prompts/01-PRD/02-overview.mdx","sourceDirName":"education/02-prompts/01-PRD","slug":"/education/prompts/PRD/overview","permalink":"/vibe-labs/docs/education/prompts/PRD/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/EliFuzz/vibe-labs/docs/education/02-prompts/01-PRD/02-overview.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Overview","description":"Overview of the PRD","hide_table_of_contents":true},"sidebar":"education","previous":{"title":"Preview","permalink":"/vibe-labs/docs/education/prompts/PRD/preview"},"next":{"title":"Orchestrator","permalink":"/vibe-labs/docs/education/prompts/PRD/orchestrator"}}');var s=t(3420),a=t(8906);const o={title:"Overview",description:"Overview of the PRD",hide_table_of_contents:!0},r=void 0,c={},l=[];function p(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:'# Comprehensive PRD (Product Requirements Document) Solution\n\n## Quick Start Guide\n\n### Step 1: Initial Setup\n\n1. Choose your AI assistant (Claude, GPT-4, Gemini, etc.)\n2. Start with the **Master PRD Orchestrator** prompt\n3. Gather initial product information using the pre-generation questionnaire\n\n### Step 2: Section Generation\n\n1. Use section-specific prompts in the recommended order:\n   - Executive Summary (last, after all other sections)\n   - Product Overview\n   - Market Analysis\n   - User Research & Personas\n   - Product Requirements\n   - Technical Specifications\n   - UX Design\n   - Implementation Plan\n\n### Step 3: Quality Assurance\n\n1. Use the Quality Assurance prompt to validate the complete PRD\n2. Address any identified issues or gaps\n3. Iterate until quality standards are met\n\n### Step 4: Final Integration\n\n1. Combine all sections into a cohesive document\n2. Ensure consistent formatting and cross-references\n3. Prepare for stakeholder review and approval\n\n## Detailed Usage Instructions\n\n### Using the Master Orchestrator\n\nThe **Master PRD Orchestrator** (`master_prd_orchestrator.md`) should be your starting point. It:\n\n- Guides you through initial requirements gathering\n- Provides a comprehensive questionnaire covering all aspects\n- Defines the sequence for using section-specific prompts\n- Includes quality gates and validation checkpoints\n- Handles edge cases and incomplete information\n\n**Best Practices:**\n\n- Complete the pre-generation questionnaire thoroughly\n- Don\'t skip sections even if information seems limited\n- Use the fallback strategies for incomplete information\n- Follow the recommended section sequence\n\n### Section-Specific Prompt Usage\n\nEach section prompt is designed to be used independently but builds on information from previous sections:\n\n#### 1. Product Overview (`product_overview_prompt.md`)\n\n- **Use when**: You have basic product concept and business objectives\n- **Requires**: Product idea, target market, basic value proposition\n- **Outputs**: Product vision, value proposition, success metrics\n- **Next step**: Market Analysis\n\n#### 2. Market Analysis (`market_analysis_prompt.md`)\n\n- **Use when**: You need comprehensive market research and competitive analysis\n- **Requires**: Target market definition, competitive landscape awareness\n- **Outputs**: Market sizing, competitive analysis, market entry strategy\n- **Next step**: User Research\n\n#### 3. User Research & Personas (`user_research_prompt.md`)\n\n- **Use when**: You need to understand users and create detailed personas\n- **Requires**: Target user segments, user research data or methodology\n- **Outputs**: User personas, journey maps, needs analysis\n- **Next step**: Product Requirements\n\n#### 4. Product Requirements (`product_requirements_prompt.md`)\n\n- **Use when**: You need to define specific product features and capabilities\n- **Requires**: User needs, business objectives, technical constraints\n- **Outputs**: Functional requirements, non-functional requirements, prioritization\n- **Next step**: Technical Specifications\n\n#### 5. Technical Specifications (`technical_specs_prompt.md`)\n\n- **Use when**: You need detailed technical architecture and implementation guidance\n- **Requires**: Product requirements, technical constraints, team capabilities\n- **Outputs**: System architecture, technology stack, technical requirements\n- **Next step**: UX Design\n\n#### 6. UX Design (`ux_design_prompt.md`)\n\n- **Use when**: You need comprehensive user experience design guidelines\n- **Requires**: User research, product requirements, technical constraints\n- **Outputs**: Design system, user flows, interaction patterns\n- **Next step**: Implementation Plan\n\n#### 7. Implementation Plan (`implementation_plan_prompt.md`)\n\n- **Use when**: You need detailed development and launch planning\n- **Requires**: All previous sections, team composition, resource constraints\n- **Outputs**: Project timeline, resource allocation, risk management\n- **Next step**: Executive Summary\n\n#### 8. Executive Summary (`executive_summary_prompt.md`)\n\n- **Use when**: All other sections are complete and you need a compelling summary\n- **Requires**: All completed PRD sections\n- **Outputs**: Concise executive overview, business case, key highlights\n- **Next step**: Quality Assurance\n\n### Quality Assurance Process\n\nThe **Quality Assurance prompt** (`quality_assurance_prompt.md`) provides comprehensive validation:\n\n#### What It Checks:\n\n- **Completeness**: All required sections and information present\n- **Consistency**: Information aligns across sections without contradictions\n- **Feasibility**: Requirements and plans are realistic and achievable\n- **Quality**: Content meets professional standards and best practices\n- **Accuracy**: Information is factual and free from hallucinations\n- **Clarity**: Content is clear, specific, and actionable\n\n#### How to Use:\n\n1. Run the QA prompt after completing all sections\n2. Review the generated quality assessment report\n3. Address critical issues immediately\n4. Implement recommended improvements\n5. Re-run QA validation if significant changes were made\n\n#### Quality Thresholds:\n\n- **25-30/30**: Excellent - Ready for stakeholder review\n- **20-24/30**: Good - Minor improvements needed\n- **15-19/30**: Fair - Significant improvements required\n- **10-14/30**: Poor - Major revisions needed\n- **Below 10/30**: Unacceptable - Requires substantial rework\n\n## AI Platform Compatibility\n\nThis prompt system is designed to work across different AI platforms:\n\n### Tested Platforms:\n\n- **Claude (Anthropic)**: Excellent performance, handles complex instructions well\n- **GPT-4 (OpenAI)**: Strong performance, good at following structured prompts\n- **Gemini (Google)**: Good performance, effective for research-heavy sections\n- **Other LLMs**: Should work with any sufficiently capable language model\n\n### Platform-Specific Tips:\n\n#### For Claude:\n\n- Excellent at following complex, structured prompts\n- Strong at maintaining consistency across sections\n- Good at identifying potential issues and hallucinations\n\n#### For GPT-4:\n\n- Works well with clear, specific instructions\n- May need reminders about cross-section consistency\n- Strong at creative problem-solving and edge cases\n\n#### For Gemini:\n\n- Excellent for research and market analysis sections\n- Good at factual accuracy and source validation\n- May need guidance on maintaining consistent tone\n\n## Best Practices\n\n### Information Gathering\n\n- **Be Thorough**: Complete questionnaires fully, even if some information is uncertain\n- **Use Real Data**: Provide actual market research, user feedback, and business data when available\n- **Document Sources**: Keep track of information sources for validation and updates\n- **Iterate**: Don\'t expect perfection on the first pass - plan for multiple iterations\n\n### Section Development\n\n- **Follow Sequence**: Use sections in the recommended order for best results\n- **Cross-Reference**: Regularly check that new sections align with previous ones\n- **Validate Assumptions**: Question and verify any assumptions made by the AI\n- **Maintain Focus**: Keep each section focused on its specific purpose and scope\n\n### Quality Management\n\n- **Regular Validation**: Run quality checks after completing each major section\n- **Address Issues Early**: Fix problems as they\'re identified rather than waiting\n- **Stakeholder Review**: Get feedback from relevant stakeholders during development\n- **Version Control**: Keep track of changes and iterations\n\n### Common Pitfalls to Avoid\n\n- **Information Overload**: Don\'t try to include everything - focus on what\'s essential\n- **Inconsistent Detail**: Maintain similar levels of detail across sections\n- **Assumption Creep**: Regularly validate that AI isn\'t making unsupported assumptions\n- **Generic Content**: Push for specific, actionable content rather than generic advice\n\n## Advanced Usage\n\n### Customization Options\n\n#### Industry-Specific Adaptations\n\n- **B2B Software**: Emphasize enterprise requirements, compliance, integration needs\n- **Consumer Apps**: Focus on user experience, engagement, viral growth\n- **E-commerce**: Highlight conversion optimization, payment systems, inventory\n- **Healthcare**: Emphasize compliance, privacy, clinical workflows\n- **Fintech**: Focus on security, regulatory compliance, financial integrations\n\n#### Company Size Adaptations\n\n- **Startup**: Emphasize MVP approach, resource constraints, rapid iteration\n- **Scale-up**: Focus on growth planning, team scaling, market expansion\n- **Enterprise**: Emphasize integration, compliance, change management\n\n#### Project Type Adaptations\n\n- **New Product**: Full comprehensive approach using all sections\n- **Feature Addition**: Focus on relevant sections (requirements, UX, implementation)\n- **Platform Migration**: Emphasize technical specifications and implementation planning\n- **Market Expansion**: Focus on market analysis and go-to-market strategy\n\n### Integration with Existing Processes\n\n#### Agile Development\n\n- Use PRD as epic-level documentation\n- Break implementation plan into sprint-sized chunks\n- Regular validation against user stories and acceptance criteria\n\n#### Design Thinking\n\n- Use user research section to capture empathy and define phases\n- Product requirements capture ideation outcomes\n- Implementation plan covers prototype and test phases\n\n#### Lean Startup\n\n- Focus on MVP definition and hypothesis validation\n- Emphasize metrics and learning objectives\n- Plan for rapid iteration and pivot scenarios\n\n## Troubleshooting\n\n### Common Issues and Solutions\n\n#### "AI is generating generic content"\n\n**Solution**: Provide more specific context and examples. Use follow-up prompts to drill down into details.\n\n#### "Sections are inconsistent with each other"\n\n**Solution**: Use the cross-reference validation in each prompt. Run quality assurance more frequently.\n\n#### "Technical specifications seem unrealistic"\n\n**Solution**: Validate technical assumptions with your development team. Provide more context about technical constraints.\n\n#### "Market analysis contains questionable data"\n\n**Solution**: Fact-check all market data. Provide specific, credible sources. Use the hallucination detection guidelines.\n\n#### "Implementation timeline seems too optimistic"\n\n**Solution**: Provide more detail about team capabilities and constraints. Include buffer time and risk factors.\n\n### Getting Better Results\n\n#### Provide Context\n\n- Share relevant background information\n- Explain constraints and limitations\n- Describe your team and organizational context\n\n#### Be Specific\n\n- Ask for specific examples and details\n- Request quantified metrics and targets\n- Specify format and length requirements\n\n#### Iterate and Refine\n\n- Don\'t accept first drafts as final\n- Ask follow-up questions for clarification\n- Request alternative approaches when needed\n\n#### Validate and Verify\n\n- Cross-check facts and figures\n- Validate technical feasibility with experts\n- Test assumptions with real users when possible\n\n## Example Workflows\n\n### Workflow 1: New Product Development\n\n1. **Week 1**: Master orchestrator + Product overview + Market analysis\n2. **Week 2**: User research + Product requirements\n3. **Week 3**: Technical specifications + UX design\n4. **Week 4**: Implementation plan + Executive summary + QA validation\n5. **Week 5**: Stakeholder review and refinement\n\n### Workflow 2: Feature Enhancement\n\n1. **Day 1**: Relevant sections from existing PRD + Updated requirements\n2. **Day 2**: UX design updates + Technical specification changes\n3. **Day 3**: Implementation plan updates + QA validation\n4. **Day 4**: Stakeholder review and approval\n\n### Workflow 3: Market Expansion\n\n1. **Week 1**: Market analysis for new market + User research updates\n2. **Week 2**: Product requirements adaptation + UX localization\n3. **Week 3**: Implementation plan for expansion + QA validation\n\n## Support and Maintenance\n\n### Keeping Prompts Updated\n\n- Review prompts quarterly for relevance and effectiveness\n- Update based on new best practices and methodologies\n- Incorporate feedback from users and stakeholders\n- Adapt to new AI capabilities and limitations\n\n### Version Control\n\n- Track changes to prompt files\n- Document rationale for major updates\n- Maintain backward compatibility when possible\n- Test updates before deploying to teams\n\n### Training and Adoption\n\n- Provide training on prompt system usage\n- Create examples and case studies\n- Establish centers of excellence for PRD development\n- Share best practices and lessons learned\n'})})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8906:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6672);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);